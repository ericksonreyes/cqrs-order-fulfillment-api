#!/bin/sh
STAGED_FILES_CMD=`git diff --cached --name-only --diff-filter=ACMR HEAD | grep \\\\.php`
PROJECT=`php -r "echo dirname(dirname(dirname(realpath('$0'))));"`
# Determine if a file list is passed
if [ "$#" -eq 1 ]
then
	oIFS=$IFS
	IFS='
	'
	SFILES="$1"
	IFS=$oIFS
fi
SFILES=${SFILES:-$STAGED_FILES_CMD}

echo '----------------------------------------------------------------------'
echo "Checking PHP Lint..."
for FILE in $SFILES
do
	php -l -d display_errors=0 $FILE
	if [ $? != 0 ]
	then
		echo "Fix the error before commit."
		exit 1
	fi
	FILES="$FILES $FILE"
done

if [ "$FILES" != "" ]
then
	# Run phpcpd
	echo
	echo "Checking for duplicate of codes..."
	phpdbg -qrr bin/phpcpd --log-pmd ./build/logs/phpcpd/pmd-cpd.xml $FILES
	PHPCPD_STATUS="$?"

	if [ $PHPCPD_STATUS -eq 1 ]
	then
		echo "Check the duplicate of codes reports in build/logs/phpcpd/php-cpd.xml"
	fi

	#Run phpmd
	echo
	echo "Checking for clean code violations..."
	phpdbg -qrr bin/phpmd src/Acme html ./phpmd.xml --reportfile ./build/logs/phpmd/index.html
	PHPMD_STATUS="$?"

	if [ $PHPMD_STATUS -eq 1 ]
	then
		echo "Check the clean code violations reports in build/logs/phpmd/index.html"
	fi

	# Run phpcbf & phpcs
	echo
	echo "Running beautify source code..."
	phpdbg -qrr bin/phpcbf --standard=PSR2 --encoding=utf-8 -p $FILES
	PHPCBF_STATUS="$?"

	if [ $PHPCBF_STATUS -eq 1 ]
	then
		git add $FILES
	fi

	echo "Running Code Sniffer: Code standard PSR2..."
	phpdbg -qrr bin/phpcs --standard=PSR2 --encoding=utf-8 -p $FILES --ignore=*/spec/*,*/build/*,*/database/*,*/resources/*,*/routes/*
	PHPCS_STATUS="$?"

	if [ $PHPCPD_STATUS -eq 1 -o $PHPCS_STATUS -eq 1 -o $PHPMD_STATUS -eq 1 ]
	then
		git add $FILES
		exit 1
	fi

	# Run phpspec
	echo "Performing unit testing...."
	phpdbg -qrr bin/phpspec run --config ./phpspec.test.yml --no-ansi

	if [ $? -eq 1 ]
	then
		echo "Fix the unit test before commit!"
		exit 1
	fi
fi

exit $?