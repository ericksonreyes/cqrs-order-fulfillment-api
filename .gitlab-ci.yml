image: edbizarro/gitlab-ci-pipeline-php:7.2-alpine
cache:
  paths:
  - vendor/

before_script:
- 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
- mkdir -p ~/.ssh
- chmod 700 ~/.ssh
- echo "$DEPLOY_STAGING_PRIVATE_KEY" > ~/.ssh/staging.pem
- chmod 400 ~/.ssh/staging.pem
- echo "$DEPLOY_PRODUCTION_PRIVATE_KEY" > ~/.ssh/production.pem
- chmod 400 ~/.ssh/production.pem
- mkdir -p ~/.deploy
- '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
- ./php-ini


stages:
- test
- deploy

test:
  stage: test
  except:
  - master
  - tags
  script:
  # Build
  - composer install --no-interaction --prefer-dist --ignore-platform-reqs --optimize-autoloader
  # Test
  - ./php bin/phing -f build.ci.xml

deploy_to_staging:
  stage: deploy
  only:
  - master
  environment:
    name: staging
    url: http://$DEPLOY_STAGING_HOST
  script:
  # Build
  - composer install --no-interaction --prefer-dist --ignore-platform-reqs --optimize-autoloader --quiet
  # Test & Code Coverage
  - ./php bin/phing
  # Build
  - composer install --prefer-dist --no-interaction --no-dev --ignore-platform-reqs --optimize-autoloader --quiet
  - rm composer.lock
  # Configure
  - cp .env.staging.dist .env
  - cp config/parameters.yml.staging.dist config/parameters.yml
  - touch storage/app/restart-artisan-commands
  # Package
  - tar --exclude='./.git' --exclude='./bin' --exclude='./--absolute-git-dir'  -czf ~/.deploy/package.tar.gz .
  # Deploy
  - ssh -i ~/.ssh/staging.pem $DEPLOY_STAGING_USERNAME@$DEPLOY_STAGING_HOST "cd $DEPLOY_STAGING_PATH && mkdir -p /var/log/lumen/$(date +%Y%m%d)/ && mkdir -p storage/logs/ && touch storage/logs/empty.log && cp storage/logs/*.log /var/log/lumen/$(date +%Y%m%d)/ && rm -Rf *"
  - scp -i ~/.ssh/staging.pem ~/.deploy/package.tar.gz $DEPLOY_STAGING_USERNAME@$DEPLOY_STAGING_HOST:$DEPLOY_STAGING_PATH
  - ssh -i ~/.ssh/staging.pem $DEPLOY_STAGING_USERNAME@$DEPLOY_STAGING_HOST "cd $DEPLOY_STAGING_PATH && tar -xzf package.tar.gz && rm -f package.tar.gz"

deploy_to_production:
  stage: deploy
  only:
  - tags
  when: manual
  environment:
    name: production
    url: http://$DEPLOY_PRODUCTION_HOST
  script:
  # Build
  - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-dev --ignore-platform-reqs --optimize-autoloader --quiet
  - rm composer.lock
  - rm -Rf .git/ bin/*
  # Configure
  - cp .env.staging.dist .env
  - cp config/parameters.yml.staging.dist config/parameters.yml
  - touch storage/app/restart-artisan-commands
  # Package
  - tar --exclude='./.git' --exclude='./bin' --exclude='./--absolute-git-dir'  -czf ~/.deploy/package.tar.gz .
  # Deploy
  - ssh -i ~/.ssh/staging.pem $DEPLOY_PRODUCTION_USERNAME@$DEPLOY_PRODUCTION_HOST "cd $DEPLOY_PRODUCTION_PATH && mkdir -p /var/log/lumen/$(date +%Y%m%d)/ && mkdir -p storage/logs/ && touch storage/logs/empty.log && cp storage/logs/* /var/log/lumen/$(date +%Y%m%d)/ && rm -Rf *"
  - scp -i ~/.ssh/staging.pem ~/.deploy/package.tar.gz $DEPLOY_PRODUCTION_USERNAME@$DEPLOY_PRODUCTION_HOST:$DEPLOY_PRODUCTION_PATH
  - ssh -i ~/.ssh/staging.pem $DEPLOY_PRODUCTION_USERNAME@$DEPLOY_PRODUCTION_HOST "cd $DEPLOY_PRODUCTION_PATH && tar -xzf package.tar.gz && rm -f package.tar.gz"